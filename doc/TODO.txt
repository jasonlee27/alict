TASKS

  - [JL] for each capability for testing NLP task, how do we extract
    its requirements from the description and use them for finding the
    most relevant data instances in dtaset.

  - [JL] using expanded grammar of seed input grammar, how can we restrict 
    randomly generated sentences to meaningful natural language sentences?
  
==========

  - [JL] make a new sentence generator. compared with the naive nltk generator,
    it needs to keep the seed input word and perturb it by replacing existing 
    words in the seed input with synonyms and adding new component in reference
    cfg.
  
  - [JL] manually generate more fine grained word categories e.g. pos_verb, neg_verb.

  + [JL] generate probability distribution over production rule in
    reference CFG.

  + [JL] given selected production rule in seed input, rank candidate
    production rules using the probability distribution.

  + [JL] generate random sentences using diff_cfg.
  
  + [JL] generate cfg difference given input cfg driven from data.
  
  + [JL] generate random sentences using generated_grammar.
  
  + [JL] generate residual cfg grammar between global and input-driven cfg grammar.

  - [JL] make a diff cfg (diff_cfg) between cfg in
    _results/checklist/sentanal_mft_template_grammar.txt and treebank
    global grammar.
  
  + [JL] generate/write cfg from input sentences.
